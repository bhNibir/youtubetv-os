name: Build WPE WebKit from tarball

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build WPEWebKit v2.48.4 from source tarball

    steps:
      - name: Set up build environment
        run: |
          # Add ARM64 architecture
          sudo dpkg --add-architecture arm64
          
          # Backup original sources
          sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup
          sudo cp -r /etc/apt/sources.list.d /etc/apt/sources.list.d.backup
          
          # Remove ARM64 architecture temporarily to clean up any cached issues
          sudo dpkg --remove-architecture arm64 || true
          sudo apt-get update
          
          # Re-add ARM64 architecture
          sudo dpkg --add-architecture arm64
          
          # Create a completely new sources configuration
          sudo tee /etc/apt/sources.list > /dev/null <<EOF
          # AMD64 repositories
          deb [arch=amd64] http://azure.archive.ubuntu.com/ubuntu/ $(lsb_release -cs) main restricted universe multiverse
          deb [arch=amd64] http://azure.archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-updates main restricted universe multiverse
          deb [arch=amd64] http://azure.archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-backports main restricted universe multiverse
          deb [arch=amd64] http://azure.archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-security main restricted universe multiverse
          EOF
          
          # Backup and modify existing sources.list.d files instead of removing them
          for file in /etc/apt/sources.list.d/*.list; do
            if [ -f "$file" ]; then
              # Add architecture restrictions to existing files
              sudo sed -i 's/^deb \([^[]*\)$/deb [arch=amd64] \1/' "$file"
              sudo sed -i 's/^deb-src \([^[]*\)$/deb-src [arch=amd64] \1/' "$file"
              # Fix lines that already have architecture but might include arm64
              sudo sed -i 's/\[arch=[^]]*\]/[arch=amd64]/g' "$file"
            fi
          done
          
          # Create ARM64 sources using ports.ubuntu.com only
          sudo tee /etc/apt/sources.list.d/arm64.list > /dev/null <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $(lsb_release -cs) main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $(lsb_release -cs)-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $(lsb_release -cs)-backports main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $(lsb_release -cs)-security main restricted universe multiverse
          EOF
          
          # Update package lists
          sudo apt-get update
          
          # Install build tools and cross-compilation toolchain
          sudo apt-get install -y \
            ninja-build cmake build-essential \
            g++-aarch64-linux-gnu gcc-aarch64-linux-gnu \
            qemu-user-static \
            python3 ruby unifdef fakeroot
          
          # Install ARM64 development libraries
          sudo apt-get install -y \
            libicu-dev:arm64 libharfbuzz-dev:arm64 \
            libglib2.0-dev:arm64 libgstreamer1.0-dev:arm64 \
            libgstreamer-plugins-base1.0-dev:arm64 \
            libjpeg-dev:arm64 libpng-dev:arm64 libwebp-dev:arm64 \
            libxml2-dev:arm64 libxslt1-dev:arm64 \
            libsqlite3-dev:arm64 libsoup2.4-dev:arm64


      - name: Download WPEWebKit v2.48.4 source
        run: |
          wget https://wpewebkit.org/releases/wpewebkit-2.48.4.tar.xz
          tar -xf wpewebkit-2.48.4.tar.xz
          mv wpewebkit-2.48.4 wpewebkit

      - name: Configure and build WPE WebKit
        run: |
          mkdir -p wpewebkit/build
          cd wpewebkit/build
          cmake .. \
            -DPORT=WPE \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
            -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
            -GNinja
          ninja
          DESTDIR=$GITHUB_WORKSPACE/deb-root ninja install

      - name: Create .deb package
        run: |
          mkdir -p deb-root/DEBIAN
          cat <<EOF > deb-root/DEBIAN/control
          Package: wpewebkit
          Version: 2.48.4
          Section: web
          Priority: optional
          Architecture: arm64
          Maintainer: bhNibir <nibir@example.com>
          Description: WPE WebKit 2.48.4 for Raspberry Pi 3B+
          EOF

          fakeroot dpkg-deb --build deb-root wpewebkit-aarch64-rpi3b-v2.48.4.deb

      - name: Upload release .deb package
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v2.48.4
          name: WPE WebKit 2.48.4 (Raspberry Pi 3B+)
          files: wpewebkit-aarch64-rpi3b-v2.48.4.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
