name: Build WPE WebKit from tarball

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build WPE WebKit 2.48.4 (arm64)

    steps:
      # ------------------------------------------------------------------
      # 1. Prepare the build machine
      # ------------------------------------------------------------------
      - name: Set up build environment
        run: |
          # Add arm64 architecture
          sudo dpkg --add-architecture arm64
          
          # Completely reset apt configuration to bypass mirror system
          sudo rm -rf /etc/apt/sources.list.d/
          sudo mkdir -p /etc/apt/sources.list.d/
          sudo rm -f /etc/apt/sources.list
          sudo rm -f /etc/apt/apt-mirrors.txt
          sudo rm -f /etc/apt/apt.conf.d/*mirror*
          sudo rm -f /etc/apt/apt.conf.d/*Mirror*
          
          # Clear all apt caches and lists
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          
          # Get Ubuntu version
          UBUNTU_VERSION=$(lsb_release -cs)
          echo "Ubuntu version: $UBUNTU_VERSION"
          
          # Create AMD64 sources.list
          sudo tee /etc/apt/sources.list >/dev/null <<AMD64_EOF
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-updates main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-backports main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-security main restricted universe multiverse
          AMD64_EOF
          
          # Create ARM64 sources file
          sudo tee /etc/apt/sources.list.d/arm64.list >/dev/null <<ARM64_EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION-backports main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION-security main restricted universe multiverse
          ARM64_EOF
          
          # Force apt to use direct sources without mirrors
          echo 'Acquire::http::Pipeline-Depth "0";' | sudo tee /etc/apt/apt.conf.d/99-direct-sources
          echo 'Acquire::http::No-Cache=True;' | sudo tee -a /etc/apt/apt.conf.d/99-direct-sources
          echo 'APT::Get::AllowUnauthenticated "false";' | sudo tee -a /etc/apt/apt.conf.d/99-direct-sources
          
          # Update package lists
          sudo apt-get update -qq

          # Fallback: If update fails, try with different approach
          if [ $? -ne 0 ]; then
            echo "First apt update failed, trying alternative approach..."
            # Remove all apt configuration and start fresh
            sudo rm -f /etc/apt/sources.list
            sudo rm -f /etc/apt/sources.list.d/*
            sudo rm -f /etc/apt/apt.conf.d/99-direct-sources
            sudo mkdir -p /etc/apt/sources.list.d/
            
            # Use minimal sources
            sudo tee /etc/apt/sources.list >/dev/null <<FALLBACK_AMD64_EOF
            deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION main
            deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-security main
            FALLBACK_AMD64_EOF
            
            sudo tee /etc/apt/sources.list.d/arm64.list >/dev/null <<FALLBACK_ARM64_EOF
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION main
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION-security main
            FALLBACK_ARM64_EOF
            
            sudo apt-get clean
            sudo rm -rf /var/lib/apt/lists/*
            sudo apt-get update -qq
          fi
          
          # Third fallback: If still failing, try with environment variables
          if [ $? -ne 0 ]; then
            echo "Second approach also failed, trying with environment variables..."
            # Set environment variables to bypass mirror system
            export APT_CONFIG=/dev/null
            export APT_CONFIG_FILE=/dev/null
            
            sudo rm -f /etc/apt/sources.list
            sudo rm -f /etc/apt/sources.list.d/*
            sudo tee /etc/apt/sources.list >/dev/null <<ENV_AMD64_EOF
            deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION main restricted universe multiverse
            deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-security main restricted universe multiverse
            ENV_AMD64_EOF
            
            sudo tee /etc/apt/sources.list.d/arm64.list >/dev/null <<ENV_ARM64_EOF
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION main restricted universe multiverse
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ $UBUNTU_VERSION-security main restricted universe multiverse
            ENV_ARM64_EOF
            
            sudo apt-get clean
            sudo rm -rf /var/lib/apt/lists/*
            sudo apt-get update -qq
          fi

          # Install cross-compilation tool-chain + host tools
          sudo apt-get install -y \
            ninja-build cmake build-essential \
            g++-aarch64-linux-gnu gcc-aarch64-linux-gnu \
            qemu-user-static \
            python3 ruby unifdef fakeroot

          # Install ARM64 development libraries
          sudo apt-get install -y \
            libicu-dev:arm64 libharfbuzz-dev:arm64 \
            libglib2.0-dev:arm64 libgstreamer1.0-dev:arm64 \
            libgstreamer-plugins-base1.0-dev:arm64 \
            libjpeg-dev:arm64 libpng-dev:arm64 libwebp-dev:arm64 \
            libxml2-dev:arm64 libxslt1-dev:arm64 \
            libsqlite3-dev:arm64 libsoup2.4-dev:arm64

          # Clean up temporary apt configuration
          sudo rm -f /etc/apt/apt.conf.d/99-direct-sources

      # ------------------------------------------------------------------
      # 2. Fetch WPE WebKit source
      # ------------------------------------------------------------------
      - name: Download WPE WebKit 2.48.4
        run: |
          wget -q https://wpewebkit.org/releases/wpewebkit-2.48.4.tar.xz
          tar -xf wpewebkit-2.48.4.tar.xz
          mv wpewebkit-2.48.4 wpewebkit

      # ------------------------------------------------------------------
      # 3. Configure & build
      # ------------------------------------------------------------------
      - name: Configure and build WPE WebKit
        run: |
          mkdir -p wpewebkit/build
          cd wpewebkit/build
          cmake .. \
            -DPORT=WPE \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
            -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
            -GNinja
          ninja
          DESTDIR=$GITHUB_WORKSPACE/deb-root ninja install

      # ------------------------------------------------------------------
      # 4. Package
      # ------------------------------------------------------------------
      - name: Create .deb package
        run: |
          mkdir -p deb-root/DEBIAN
          cat <<EOF > deb-root/DEBIAN/control
          Package: wpewebkit
          Version: 2.48.4
          Section: web
          Priority: optional
          Architecture: arm64
          Maintainer: bhNibir <nibir@example.com>
          Description: WPE WebKit 2.48.4 built for Raspberry Pi 3B+
          EOF
          fakeroot dpkg-deb --build deb-root wpewebkit-aarch64-rpi3b-v2.48.4.deb

      # ------------------------------------------------------------------
      # 5. Release
      # ------------------------------------------------------------------
      - name: Upload release .deb package
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v2.48.4
          name: WPE WebKit 2.48.4 (Raspberry Pi 3B+)
          files: wpewebkit-aarch64-rpi3b-v2.48.4.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}